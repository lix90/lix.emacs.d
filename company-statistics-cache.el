(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8 data ("add-hook" (((:keyword "setq") . 1) (emacs-lisp-mode . 5) (nil . 5) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 3) ((:keyword "use-package") . 2)) "mmm-mode" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package" (((:keyword "setq") . 7) (emacs-lisp-mode . 19) (nil . 19) ((:keyword "use-package") . 7) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 6) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 9) ((:keyword "progn") . 2) ((:file "/Users/lix/.emacs.d/config/config-evil.el") . 2) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1) ((:keyword "interactive") . 1)) "local-file-name" (((:file "/Users/lix/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-mode-hook" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-beautify-args" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 3) ((:keyword "use-package") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "setq") . 1)) "eval-after-load" (((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) "~/github/hexo-blog/" ((emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 2) ((:keyword "interactive") . 2)) "installed.packages" ((inferior-ess-mode . 1) (nil . 1) ((:keyword "in") . 1)) "golden-ratio-exclude-modes" (((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "font-weight" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 2) (scss-mode . 2)) "sans-serif" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "font-family" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "vehicles" ((inferior-ess-mode . 1)) "margin-top" (((:file "/Users/lix/github/html_demos/demo1.css") . 2) (css-mode . 2) (nil . 5) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 2) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) "width" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "border-left" (((:file "/Users/lix/github/html_demos/demo1.css") . 3) (css-mode . 3) (nil . 3)) "outline" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "mdyaml" ((markdown-mode . 14) (nil . 14) ((:file "/Users/lix/jirengu/notes/响应式页面.md") . 1) ((:file "/Users/lix/github/d3_demos/note.md") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task006/task006.md") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task008/task008.md") . 1) ((:file "/Users/lix/github/hexo-blog/source/_drafts/note_css.md") . 1) ((:file "/Users/lix/github/personal_sharing/tips_sharing.md") . 1) ((:file "/Users/lix/github/r_workshop_acrlab/plan.md") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/task009.md") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/task009_2.md") . 1) ((:file "/Users/lix/github/hexo-blog/source/_drafts/python_builtin.md") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/task010.md") . 1) ((:file "/Users/lix/github/hexo-blog/source/_drafts/http.md") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task011/task011.md") . 1) ((:file "/Users/lix/github/ml_notes/overview.md") . 1)) "rdmore" ((markdown-mode . 1) (nil . 1) ((:file "/Users/lix/github/d3_demos/note.md") . 1)) "overline" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "blink" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "getMethod" (((:keyword "if") . 1) (inferior-ess-mode . 1) (nil . 1)) "selectMethod" (((:keyword "if") . 1) (inferior-ess-mode . 1) (nil . 1)) "background-color" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 2) (scss-mode . 3) (nil . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) "bottom" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "install.packages" ((inferior-ess-mode . 4) (nil . 4) ((:keyword "in") . 1) ((:keyword "for") . 2)) "font-style" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "line-height" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 7) (scss-mode . 10) (nil . 10) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 3)) ":init" (((:file "/Users/lix/.emacs.d/config/config-edit.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "margin-bottom" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1) (scss-mode . 5) (nil . 5) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 4)) ":ensure" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "border-left-style" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1) (scss-mode . 1) (nil . 1)) "css-mode-hook" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "define-key" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 5) ((:keyword "progn") . 2) (emacs-lisp-mode . 5) (nil . 5) ((:keyword "setq") . 1) ((:keyword "use-package") . 2)) "border-color" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "class" ((web-mode . 2) (nil . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task004_html2/demo.html") . 2)) "margin-right" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "border-left-width" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1) (scss-mode . 2) (nil . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) "vehicles$sCharger" ((inferior-ess-mode . 1) (nil . 1)) "mpgByYr" (((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) (ess-mode . 1)) "border-left-color" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1) (scss-mode . 1) (nil . 1)) "none" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1) (scss-mode . 1) (nil . 1)) "gasCars" ((inferior-ess-mode . 1) ((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) (ess-mode . 1) (nil . 1)) "mpgByYr_Gas" ((inferior-ess-mode . 1)) "ggplot" (((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) (ess-mode . 1) (nil . 1)) "content" (((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1) (nil . 1)) "avgCarSize" ((inferior-ess-mode . 1)) "eval-buffer" (((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "geom_smooth" (((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) (ess-mode . 1) (nil . 1)) "lix/open-emacs-config" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lix/open-hexo-source-post" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lix/open-hexo-source-draft" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lix/file-note-temp" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "gasCars4" (((:keyword "function") . 1)) "uniqMakes" (((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) ((:keyword "function") . 1) (ess-mode . 1) (nil . 1)) "Reduce" (((:symbol "nil") . 1) ((:keyword "message") . 1) (inferior-ess-mode . 1) (nil . 1)) "commonMakes" (((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) ((:keyword "function") . 1) (ess-mode . 1) (nil . 1)) "devtools::RCMD" ((inferior-ess-mode . 1) (nil . 1)) "/Applications/MATLAB_R2014b.app/" (((:file "/Users/lix/.bash_profile") . 1) (sh-mode . 1) (nil . 1)) "~/.bash_profile" ((eshell-mode . 1) (nil . 5) (shell-mode . 4)) "web-mode-indent-line" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-mode-markup-indent-offset" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-mode-css-indent-offset" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-mode-code-indent-offset" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-mode-indent-style" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq-default" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "indent-tabs-mode" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "setq-default") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./ydcv.py" ((eshell-mode . 1) (nil . 2) (shell-mode . 1)) "section" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task004_html2/demo.html") . 1) ((:symbol "nil") . 1) (web-mode . 1) (nil . 1)) "value = " ((inferior-ess-mode . 1) (nil . 1)) "script" (((:file "/Users/lix/github/d3_demos/draw_circle.html") . 1) (web-mode . 1) (nil . 1)) "header" ((css-mode . 3) (nil . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2) ((:symbol "nil") . 1)) "text-align" ((css-mode . 5) (nil . 7) ((:file "/Users/lix/github/html_demos/style.css") . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1) (scss-mode . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) "padding-left" ((css-mode . 8) (nil . 8) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style2.css") . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 4)) "border-bottom" ((css-mode . 1) (nil . 1)) "border-bottom-color" ((css-mode . 3) (nil . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 2)) "border-bottom-width" ((css-mode . 1) (nil . 1)) "text-decoration" ((css-mode . 1) (nil . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1)) "border-radius" ((css-mode . 3) (nil . 6) ((:file "/Users/lix/github/html_demos/style.css") . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 3) (scss-mode . 3)) "padding-top" ((css-mode . 1) (nil . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 2)) "padding-bottom" ((css-mode . 2) (nil . 6) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 3) (scss-mode . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) "padding-right" ((css-mode . 2) (nil . 5) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 2)) "display" ((css-mode . 4) (nil . 7) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style2.css") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) "path-separator" (((:file "/Users/lix/playground/elisp_demo.el") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "phi-rectangle-mark-active" (((:file "/Users/lix/.emacs.d/config/config-edit.el") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "password" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1) (web-mode . 1) (nil . 1)) "radio" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1) (web-mode . 1) (nil . 1)) "input" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1) (web-mode . 1) (nil . 1)) "checkbox" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 3) (web-mode . 3) (nil . 3)) "textarea" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 2) (web-mode . 2) (nil . 2)) "placeholder" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 3) (web-mode . 4) (nil . 4) ((:file "/Users/lix/github/html_demos/demo1.html") . 1)) ":question:" ((shell-mode . 2) (nil . 2)) "skewer-css-mode" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "html-mode-hook" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 3) ((:keyword "progn") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "use-package") . 1)) "skewer-html-mode" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "skewer-setup" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/app/ydcv/ydcv.py" (((:file "/Users/lix/.bash_profile") . 1) (sh-mode . 1) (nil . 1)) "evil--jumps-buffer-targets" (((:file "/Users/lix/.emacs.d/config/config-evil.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "link" (((:file "/Users/lix/github/html_demos/skewer_test.html") . 1) ((:keyword "!doctype") . 3) (html-mode . 3) (nil . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo3.html") . 1)) "./style.css" (((:file "/Users/lix/github/html_demos/skewer_test.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "first-child" (((:file "/Users/lix/github/html_demos/style.css") . 3) ((:symbol "li") . 3) (css-mode . 5) (nil . 5) ((:symbol "ul") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1) ((:symbol "div") . 1)) "list-style" (((:file "/Users/lix/github/html_demos/style.css") . 1) (css-mode . 1) (nil . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1)) "inline-block" (((:file "/Users/lix/github/html_demos/style.css") . 1) (css-mode . 3) (nil . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2)) "circle" (((:file "/Users/lix/github/html_demos/style.css") . 1) (css-mode . 1) (nil . 1)) "margin" (((:file "/Users/lix/github/html_demos/style.css") . 1) (css-mode . 1) (nil . 1)) "box-shadow" (((:file "/Users/lix/github/html_demos/style.css") . 2) (css-mode . 3) (nil . 4) ((:file "/Users/lix/github/html_demos/demo1.css") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1) (scss-mode . 1)) "./dic.py" ((shell-mode . 1) (nil . 1)) "html" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 2) (html-mode . 2) (nil . 2) ((:keyword "!DOCTYPE") . 1)) "./img/play_black.png" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "./img/right_black.png" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "./img/stop_black.png" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "background-image" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2) (css-mode . 2) (nil . 2)) "./img/right.png" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "./img/play.png" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "./img/stop.png" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "url()" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2) (css-mode . 2) (nil . 2)) "float" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2) (css-mode . 2) (nil . 2)) "absolute" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 3) (css-mode . 4) (nil . 13) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo2.css") . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 9) (scss-mode . 9)) "background" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 3) (css-mode . 9) (nil . 12) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2) ((:file "/Users/lix/github/html_demos/demo1.css") . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_nav.scss") . 2) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) "no-repeat" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 3) (css-mode . 3) (nil . 3)) "height" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) (css-mode . 1) (nil . 1)) "vertical-align" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) (css-mode . 1) (nil . 1)) "font-size" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1) (css-mode . 5) (nil . 12) ((:file "/Users/lix/github/html_demos/demo1.css") . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 2) (scss-mode . 7) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) "add-to-list" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 2) ((:keyword "progn") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "use-package") . 1)) "company-backends" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 3) ((:keyword "progn") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "use-package") . 1) ((:keyword "defun") . 1)) "company-web-html" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 2) ((:keyword "progn") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "defun") . 1)) "html-mode-map" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-beautify-css" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-beautify-html" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 2) ((:keyword "progn") . 2) (emacs-lisp-mode . 2) (nil . 2)) "company-web-jade" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "link.stylesheet" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 2) ((:keyword "!doctype") . 2) (html-mode . 2) (nil . 2)) "black" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style2.css") . 1) (css-mode . 1) (nil . 1)) "./fontello/" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "./fontello/css/fontello.css" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "border-top" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1) (css-mode . 1) (nil . 1)) "border-top-color" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 2) (css-mode . 2) (nil . 2)) "border-right-color" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1) (css-mode . 1) (nil . 1)) ":diminish" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 2) ((:keyword "use-package") . 3) (emacs-lisp-mode . 3) (nil . 3) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1)) "interactive" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 6) ((:keyword "defun") . 7) (emacs-lisp-mode . 7) (nil . 7) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) "~/jirengu/" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/jirengu/jrg-renwu9/" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/jirengu/jrg-renwu9/homework/" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/jirengu/jrg-renwu9/homework/李想/" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "find-face-definition" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/github/hexo-blog/source/_drafts/" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "abbrev-file-name" (((:file "/Users/lix/.emacs.d/config/config-ac.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "golden-ratio-mode" (((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 2) ((:keyword "progn") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "use-package") . 1)) "/usr/local/mysql/bin/mysql" ((shell-mode . 2) (nil . 2)) "/usr/local/mysql/bin/mysqldump" ((shell-mode . 2) (nil . 2)) "/usr/local/mysql-5.7.15-osx10.11-x86_64/" ((shell-mode . 1) (nil . 1)) "~/.dotfiles/.bash_profile" ((shell-mode . 1) (nil . 1)) "diminish" (((:file "/Users/lix/.emacs.d/config/config-ac.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "shadowsocksx" (((:symbol "/") . 1) (shell-mode . 2) (nil . 3) ((:symbol "dotfiles/") . 1) ((:file "/Users/lix/.dotfiles/.git/COMMIT_EDITMSG") . 1) (text-mode . 1)) "dotfiles" (((:symbol "/") . 1) (shell-mode . 1) (nil . 1)) "symon-sparkline-type" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "symon-sparkline-thickness" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "extra" ((shell-mode . 1) (nil . 1)) "eww-suggest-uris" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "browse-url-browser-function" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "eww-browse-url" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "browse-url" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "segmentation" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "algorithms" (((:file "/Users/lix/github/ml_notes/overview.md") . 1) (markdown-mode . 1) (nil . 1)) "hypothesis" (((:file "/Users/lix/github/ml_notes/overview.md") . 1) (markdown-mode . 1) (nil . 1)) "perceptron" ((shell-mode . 1) (nil . 1)) "osx-dictionary-dictionary-choice" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "learning" (((:file "/Users/lix/github/ml_notes/overview.md") . 1) (markdown-mode . 1) (nil . 1)) "correct" (((:file "/Users/lix/github/ml_notes/overview.md") . 1) (markdown-mode . 1) (nil . 1)) "moe-theme-mode-line-color" (((:keyword "setq") . 1) (lisp-interaction-mode . 1) (nil . 1)) "source" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "data" (((:file "/Users/lix/github/hexo-blog/source/about/index.md") . 1) (markdown-mode . 1) (nil . 1)) "tutorial" (((:file "/Users/lix/github/hexo-blog/source/about/index.md") . 1) (markdown-mode . 1) (nil . 1)) "blog" ((shell-mode . 1) (nil . 1)) "footer" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1) (css-mode . 1) (nil . 1)) "overflow" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2) (css-mode . 2) (nil . 2)) "80px" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1) (css-mode . 1) (nil . 1)) "main" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2) ((:symbol "nil") . 2) (css-mode . 2) (nil . 2)) "0%\242\321" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1) (css-mode . 1) (nil . 1)) "transform" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2) (css-mode . 2) (nil . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_daily.scss") . 2) (scss-mode . 2)) "clearfix" (((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.html") . 1) ((:keyword "!doctype") . 1) (html-mode . 1) (nil . 1)) "machine" ((shell-mode . 1) (nil . 1)) "allow" ((shell-mode . 1) (nil . 1)) "mdo\213v\300\253\252\205\347" (((:file "/Users/lix/github/vis_notes/lecture01.md") . 1) (markdown-mode . 1) (nil . 1)) "shell-pop-shell-type" (((:file "/Users/lix/.emacs.d/config/config-shell.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-beautify-js" (((:file "/Users/lix/.emacs.d/config/config-web.el") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "initial-major-mode" (((:file "/Users/lix/.emacs.d/config/config-edit.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "neo-window-width" (((:file "/Users/lix/.emacs.d/config/config-neotree.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "neo-window-fixed-size" (((:file "/Users/lix/.emacs.d/config/config-neotree.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "golden-ratio-wide-adjust-factor" (((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "file-exists-p" (((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "transparent" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "pointer" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "transition" (((:file "/Users/lix/github/html_demos/demo1.css") . 1) (css-mode . 1) (nil . 1)) "getMethods" (((:keyword "if") . 1) (inferior-ess-mode . 1) (nil . 1)) "global-set-key" (((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 4) ((:keyword "interactive") . 10) (emacs-lisp-mode . 10) (nil . 10) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 6)) "eval-region" (((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "byYear" (((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1) (ess-mode . 1) (nil . 1)) "find-file" (((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dev.off" ((inferior-ess-mode . 1) (nil . 1)) "default-buffer-file-coding-system" (((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)))) company-statistics--log [("uniqMakes" (nil . 1) (ess-mode . 1) ((:keyword "function") . 1) ((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1)) ("Reduce" (nil . 1) (inferior-ess-mode . 1) ((:keyword "message") . 1) ((:symbol "nil") . 1)) ("gasCars4" (nil . 1) (ess-mode . 1) ((:keyword "function") . 1) ((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1)) ("commonMakes" (nil . 1) (ess-mode . 1) ((:keyword "function") . 1) ((:file "/Users/lix/playground/practical_data_sci_cook_book/ch2.r") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/notes/响应式页面.md") . 1)) ("install.packages" (nil . 1) (inferior-ess-mode . 1) ((:keyword "in") . 1)) ("installed.packages" (nil . 1) (inferior-ess-mode . 1) ((:keyword "in") . 1)) ("devtools::RCMD" (nil . 1) (inferior-ess-mode . 1)) ("/Applications/MATLAB_R2014b.app/" (nil . 1) (sh-mode . 1) ((:file "/Users/lix/.bash_profile") . 1)) ("~/.bash_profile" (nil . 1) (eshell-mode . 1)) ("~/.bash_profile" (nil . 1) (shell-mode . 2)) ("~/.bash_profile" (nil . 1) (shell-mode . 1)) ("~/.bash_profile" (nil . 1) (shell-mode . 1)) ("install.packages" (nil . 1) (inferior-ess-mode . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-mode-indent-line" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-mode-markup-indent-offset" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-mode-css-indent-offset" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-mode-code-indent-offset" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-mode-indent-style" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("indent-tabs-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-default") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("./ydcv.py" (nil . 2) (eshell-mode . 1)) ("./ydcv.py" (nil . 1) (shell-mode . 1)) ("class" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task004_html2/demo.html") . 2)) ("class" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task004_html2/demo.html") . 1)) ("section" (nil . 1) (web-mode . 1) ((:symbol "nil") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task004_html2/demo.html") . 1)) ("value = " (nil . 1) (inferior-ess-mode . 1)) ("script" (nil . 1) (web-mode . 1) ((:file "/Users/lix/github/d3_demos/draw_circle.html") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/d3_demos/note.md") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task006/task006.md") . 1)) ("header" (nil . 1) (css-mode . 1)) ("text-align" (nil . 2) (css-mode . 2)) ("padding-left" (nil . 2) (css-mode . 2)) ("border-bottom" (nil . 1) (css-mode . 1)) ("border-bottom-color" (nil . 1) (css-mode . 1)) ("border-bottom-width" (nil . 1) (css-mode . 1)) ("text-decoration" (nil . 1) (css-mode . 1)) ("border-radius" (nil . 1) (css-mode . 1)) ("padding-top" (nil . 1) (css-mode . 1)) ("padding-bottom" (nil . 1) (css-mode . 1)) ("padding-left" (nil . 1) (css-mode . 1)) ("padding-right" (nil . 1) (css-mode . 1)) ("display" (nil . 1) (css-mode . 1)) ("text-align" (nil . 1) (css-mode . 1)) ("path-separator" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/Users/lix/playground/elisp_demo.el") . 1)) ("phi-rectangle-mark-active" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/Users/lix/.emacs.d/config/config-edit.el") . 2)) ("phi-rectangle-mark-active" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-edit.el") . 1)) ("rdmore" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/d3_demos/note.md") . 1)) ("password" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("radio" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("input" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("checkbox" (nil . 3) (web-mode . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 3)) ("checkbox" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("checkbox" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("textarea" (nil . 2) (web-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 2)) ("textarea" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("placeholder" (nil . 3) (web-mode . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 3)) ("placeholder" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("placeholder" (nil . 1) (web-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task007/form_demo.html") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task008/task008.md") . 1)) (":question:" (nil . 1) (shell-mode . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/hexo-blog/source/_drafts/note_css.md") . 1)) ("css-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("skewer-css-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("html-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("skewer-html-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("skewer-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("~/app/ydcv/ydcv.py" (nil . 1) (sh-mode . 1) ((:file "/Users/lix/.bash_profile") . 1)) ("~/.bash_profile" (nil . 1) (shell-mode . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/lix/.emacs.d/config/config-evil.el") . 2)) ("evil--jumps-buffer-targets" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-evil.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-evil.el") . 1)) ("local-file-name" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/init.el") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/personal_sharing/tips_sharing.md") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/r_workshop_acrlab/plan.md") . 1)) ("install.packages" (nil . 1) (inferior-ess-mode . 1) ((:keyword "for") . 2)) ("install.packages" (nil . 1) (inferior-ess-mode . 1) ((:keyword "for") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/task009.md") . 1)) ("link" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/github/html_demos/skewer_test.html") . 1)) ("./style.css" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/github/html_demos/skewer_test.html") . 1)) ("first-child" (nil . 3) (css-mode . 3) ((:symbol "li") . 2) ((:file "/Users/lix/github/html_demos/style.css") . 3)) ("list-style" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("first-child" (nil . 1) (css-mode . 1) ((:symbol "ul") . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("first-child" (nil . 1) (css-mode . 1) ((:symbol "li") . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("inline-block" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("border-radius" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 2)) ("circle" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("margin" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("text-align" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 2)) ("text-align" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("border-radius" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("box-shadow" (nil . 2) (css-mode . 2) ((:file "/Users/lix/github/html_demos/style.css") . 2)) ("box-shadow" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/style.css") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/task009_2.md") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/hexo-blog/source/_drafts/python_builtin.md") . 1)) (":question:" (nil . 1) (shell-mode . 1)) ("./dic.py" (nil . 1) (shell-mode . 1)) ("html" (nil . 1) (html-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("./img/play_black.png" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("./img/right_black.png" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("./img/stop_black.png" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("link" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("background-image" (nil . 2) (css-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2)) ("./img/right.png" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("./img/play.png" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("./img/stop.png" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("background-image" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("url()" (nil . 2) (css-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2)) ("float" (nil . 2) (css-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2)) ("absolute" (nil . 3) (css-mode . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 3)) ("absolute" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("display" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("inline-block" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 2)) ("absolute" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("inline-block" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("padding-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("padding-right" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("first-child" (nil . 1) (css-mode . 1) ((:symbol "li") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("background" (nil . 3) (css-mode . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 3)) ("url()" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("no-repeat" (nil . 3) (css-mode . 3) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 3)) ("height" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("no-repeat" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("no-repeat" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("vertical-align" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("float" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("text-align" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("padding-bottom" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("font-size" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style.css") . 1)) ("eval-after-load" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("add-to-list" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 2)) ("company-backends" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 2)) ("company-web-html" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("html-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("html-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-css" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-html" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("company-backends" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("company-web-jade" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("link.stylesheet" (nil . 2) (html-mode . 2) ((:keyword "!doctype") . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 2)) ("display" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style2.css") . 1)) ("black" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style2.css") . 1)) ("padding-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style2.css") . 1)) ("link.stylesheet" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 1)) ("./fontello/" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 1)) ("./fontello/css/fontello.css" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo2.html") . 1)) ("link" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo3.html") . 1)) ("first-child" (nil . 1) (css-mode . 1) ((:symbol "div") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1)) ("border-top" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1)) ("border-top-color" (nil . 2) (css-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 2)) ("border-right-color" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1)) ("border-bottom-color" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 2)) ("border-top-color" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1)) ("border-bottom-color" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/style3.css") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/task010.md") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) (":diminish" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("html-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("html" (nil . 1) (html-mode . 1) ((:keyword "!DOCTYPE") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task009/demo1.html") . 1)) ("interactive" (nil . 4) (emacs-lisp-mode . 4) ((:keyword "defun") . 4) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 4)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/github/hexo-blog/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 2) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 2)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/jirengu/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/jirengu/jrg-renwu9/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/jirengu/jrg-renwu9/homework/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/jirengu/jrg-renwu9/homework/李想/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("find-face-definition" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/github/hexo-blog/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("~/github/hexo-blog/source/_drafts/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/hexo-blog/source/_drafts/http.md") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task011/task011.md") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("abbrev-file-name" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-ac.el") . 1)) ("mdyaml" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/ml_notes/overview.md") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1)) ("golden-ratio-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 2)) ("/usr/local/mysql/bin/mysql" (nil . 2) (shell-mode . 2)) ("/usr/local/mysql/bin/mysqldump" (nil . 2) (shell-mode . 2)) ("/usr/local/mysql-5.7.15-osx10.11-x86_64/" (nil . 1) (shell-mode . 1)) ("/usr/local/mysql/bin/mysql" (nil . 1) (shell-mode . 1)) ("/usr/local/mysql/bin/mysqldump" (nil . 1) (shell-mode . 1)) ("~/.dotfiles/.bash_profile" (nil . 1) (shell-mode . 1)) (":diminish" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1)) ("golden-ratio-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1)) ("diminish" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-ac.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("shadowsocksx" (nil . 3) (shell-mode . 2) ((:symbol "/") . 1)) ("dotfiles" (nil . 1) (shell-mode . 1) ((:symbol "/") . 1)) ("shadowsocksx" (nil . 1) (shell-mode . 1) ((:symbol "dotfiles/") . 1)) ("shadowsocksx" (nil . 1) (text-mode . 1) ((:file "/Users/lix/.dotfiles/.git/COMMIT_EDITMSG") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("symon-sparkline-type" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("symon-sparkline-thickness" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("extra" (nil . 1) (shell-mode . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("eww-suggest-uris" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("browse-url-browser-function" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 2)) ("eww-browse-url" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("browse-url" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("browse-url-browser-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("segmentation" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("algorithms" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/ml_notes/overview.md") . 1)) ("hypothesis" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/ml_notes/overview.md") . 1)) ("perceptron" (nil . 1) (shell-mode . 1)) ("osx-dictionary-dictionary-choice" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("learning" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/ml_notes/overview.md") . 1)) ("correct" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/ml_notes/overview.md") . 1)) ("moe-theme-mode-line-color" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "setq") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("source" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("data" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/hexo-blog/source/about/index.md") . 1)) ("tutorial" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/hexo-blog/source/about/index.md") . 1)) ("blog" (nil . 1) (shell-mode . 1)) ("header" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2)) ("footer" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("overflow" (nil . 2) (css-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2)) ("80px" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("main" (nil . 2) (css-mode . 2) ((:symbol "nil") . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2)) ("main" (nil . 1) (css-mode . 1) ((:symbol "nil") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("header" (nil . 1) (css-mode . 1) ((:symbol "nil") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("0%\242\321" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("transform" (nil . 2) (css-mode . 2) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 2)) ("transform" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) (":diminish" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("overflow" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("display" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.css") . 1)) ("clearfix" (nil . 1) (html-mode . 1) ((:keyword "!doctype") . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo.html") . 1)) ("absolute" (nil . 1) (css-mode . 1) ((:file "/Users/lix/jirengu/jrg-renwu9/homework/李想/task010/demo2.css") . 1)) ("machine" (nil . 1) (shell-mode . 1)) ("allow" (nil . 1) (shell-mode . 1)) ("mdo\213v\300\253\252\205\347" (nil . 1) (markdown-mode . 1) ((:file "/Users/lix/github/vis_notes/lecture01.md") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("mmm-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("company-backends" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("company-web-html" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-js" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 2)) ("web-beautify-args" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "use-package") . 2) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 3)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-args" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-args" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 2) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-js" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("web-beautify-html" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("initial-major-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-edit.el") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-web.el") . 1)) ("neo-window-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-neotree.el") . 1)) ("neo-window-fixed-size" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-neotree.el") . 1)) ("golden-ratio-wide-adjust-factor" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("file-exists-p" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("golden-ratio-exclude-modes" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-appearance.el") . 1)) ("font-size" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 4)) ("font-weight" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("padding-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 4)) ("font-family" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("sans-serif" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("placeholder" (nil . 1) (web-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.html") . 1)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 4)) ("border-left" (nil . 3) (css-mode . 3) ((:file "/Users/lix/github/html_demos/demo1.css") . 3)) ("font-size" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("width" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("margin-top" (nil . 2) (css-mode . 2) ((:file "/Users/lix/github/html_demos/demo1.css") . 2)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("transparent" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("pointer" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("font-size" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("padding-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("border-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("box-shadow" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("outline" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("transition" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("background" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("margin-top" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("padding-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("padding-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("border-left" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("font-size" (nil . 1) (css-mode . 1) ((:file "/Users/lix/github/html_demos/demo1.css") . 1)) ("background" (nil . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_nav.scss") . 2)) ("text-decoration" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("overline" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("blink" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("border-radius" (nil . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 3)) ("padding-right" (nil . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("padding-bottom" (nil . 1) (scss-mode . 4) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 3)) ("background" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_nav.scss") . 1)) ("font-weight" (nil . 1) (scss-mode . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 2)) ("background" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 9) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 9)) ("bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("background-color" (nil . 3) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 2)) ("font-style" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("line-height" (nil . 10) (scss-mode . 10) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 7)) ("margin-top" (nil . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 2)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("transform" (nil . 1) (scss-mode . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_daily.scss") . 2)) ("transform" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_daily.scss") . 1)) ("text-align" (nil . 1) (scss-mode . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("font-size" (nil . 1) (scss-mode . 7) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 2)) ("font-size" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("margin-top" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("margin-bottom" (nil . 5) (scss-mode . 5) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 3)) ("padding-right" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 2)) ("padding-right" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("padding-top" (nil . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("list-style" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("margin-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 4)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("padding-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("border-radius" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("absolute" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("margin-right" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("border-color" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("text-align" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("margin-top" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("display" (nil . 1) (scss-mode . 3) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("margin-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("font-size" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 4)) ("font-weight" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("font-size" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("padding-top" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 2)) ("margin-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("margin-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("background-color" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("font-size" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("display" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("none" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("border-left-color" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("border-left-width" (nil . 2) (scss-mode . 2) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("border-left-style" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("padding-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_highlight.scss") . 1)) ("border-left-width" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("background-color" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("border-radius" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("padding-top" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("padding-bottom" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("box-shadow" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("content" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("font-size" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("font-size" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("line-height" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_post.scss") . 1)) ("display" (nil . 1) (scss-mode . 1) ((:file "/Users/lix/github/hexo-blog/themes/Daily/source/css/_mobile.scss") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("global-set-key" (nil . 10) (emacs-lisp-mode . 10) ((:keyword "interactive") . 10) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 4)) ("eval-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("eval-region" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("find-file" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 6)) ("lix/open-emacs-config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("lix/open-hexo-source-post" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("lix/open-hexo-source-draft" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("lix/file-note-temp" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/Users/lix/.emacs.d/config/config-tool.el") . 1)) ("default-buffer-file-coding-system" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/lix/.emacs.d/config/config-keybind.el") . 1))] company-statistics--index 0)
